include: "rules/common.smk"


if config.get("load_fair_genome_indexer", True):

    include: "rules/fair_genome_indexer.smk"


include: "rules/fastq_info.smk"
include: "rules/fastq_screen.smk"
include: "rules/fastq_utils.smk"
include: "rules/fastqc.smk"
include: "rules/multiqc.smk"
include: "rules/prepare_input.smk"
include: "rules/seqkit.smk"


rule fair_fastqc_multiqc_target:
    input:
        multiqc=[
            "results/QC/MultiQC_FastQC.html",
            "results/QC/MultiQC_FastQC_data.zip",
        ],
        fastqinfo_pe=expand(
            "results/QC/fastqinfo/{sample.sample_id}.{sample.species}.{sample.build}.{sample.release}.{datatype}.pe.tsv",
            sample=lookup(query="downstream_file == downstream_file", within=samples),
            datatype=("dna", "transcripts"),
        ),
        seqkit_stats=expand("results/QC/SeqKit.Stats.{pairs}.tsv", pairs=("se", "pe")),
        fastqutils_info_pe=expand(
            "results/QC/fastq_info/{sample.sample_id}.pe.txt",
            sample=lookup(query="downstream_file == downstream_file", within=samples),
        ),
        fastqutils_info_se=expand(
            "results/QC/fastq_info/{sample.sample_id}.se.txt",
            sample=lookup(query="downstream_file != downstream_file", within=samples),
        ),
    output:
        touch("tmp/targets/fair_fastqc_multiqc_target.flag"),
    localrule: True
    threads: 1
    resources:
        mem_mb=128,
        runtime=2,
        tmpdir="tmp",
    log:
        "logs/fair_fastqc_multiqc_target.log",
    benchmark:
        "benchmark/fair_fastqc_multiqc_target.tsv"
